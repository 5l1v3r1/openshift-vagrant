# Create an OSEv3 group that contains the masters and nodes groups
[OSEv3:children]
masters
nodes
etcd
lb

# Set variables common for all OSEv3 hosts
[OSEv3:vars]
# SSH user, this user should allow ssh based auth without requiring a password
ansible_ssh_user=vagrant

# If ansible_ssh_user is not root, ansible_become must be set to true
ansible_become=true

openshift_deployment_type=origin

# Specify the generic release of OpenShift to install. This is used mainly just during installation, after which we
# rely on the version running on the first master. Works best for containerized installs where we can usually
# use this to lookup the latest exact version of the container images, which is the tag actually used to configure
# the cluster. For RPM installations we just verify the version detected in your configured repos matches this
# release.
openshift_release=v3.6

# Specify an exact container image tag to install or configure.
# WARNING: This value will be used for all hosts in containerized environments, even those that have another version installed.
# This could potentially trigger an upgrade and downtime, so be careful with modifying this value after the cluster is set up.
openshift_image_tag=v3.6.0

# Specify an exact rpm version to install or configure.
# WARNING: This value will be used for all hosts in RPM based environments, even those that have another version installed.
# This could potentially trigger an upgrade and downtime, so be careful with modifying this value after the cluster is set up.
openshift_pkg_version=-3.6.0

# uncomment the following to enable htpasswd authentication; defaults to DenyAllPasswordIdentityProvider
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
# Default login account: admin / handhand
openshift_master_htpasswd_users={'admin': '$apr1$gfaL16Jf$c.5LAvg3xNDVQTkk6HpGB1'}

openshift_disable_check=disk_availability,memory_availability,docker_storage
#docker_selinux_enabled=false
openshift_docker_options=" --selinux-enabled --log-driver=journald --storage-driver=overlay --registry-mirror=http://4a0fee72.m.daocloud.io "

# openshift_hosted_manage_registry=false

# OpenShift Router Options
# Router selector (optional)
# Router will only be created if nodes matching this label are present.
# Default value: 'region=infra'
openshift_hosted_router_selector='region=infra,router=true'

# default subdomain to use for exposed routes
openshift_master_default_subdomain=openshift.example.com

# host group for masters
[masters]
master.example.com openshift_ip=192.168.101.101 openshift_host=192.168.101.101 ansible_ssh_private_key_file="/home/vagrant/.ssh/master.key"

# host group for etcd
[etcd]
etcd.example.com openshift_ip=192.168.101.101 openshift_host=192.168.101.101 ansible_ssh_private_key_file="/home/vagrant/.ssh/master.key"

# Load balancers
[lb]
lb.example.com openshift_ip=192.168.101.102 openshift_host=192.168.101.102 ansible_ssh_private_key_file="/home/vagrant/.ssh/node01.key"

# host group for nodes, includes region info
[nodes]
master.example.com openshift_ip=192.168.101.101 openshift_host=192.168.101.101 ansible_ssh_private_key_file="/home/vagrant/.ssh/master.key" openshift_schedulable=true openshift_node_labels="{'region': 'infra', 'router': 'true'}"
node01.example.com openshift_ip=192.168.101.102 openshift_host=192.168.101.102 ansible_ssh_private_key_file="/home/vagrant/.ssh/node01.key" openshift_schedulable=true openshift_node_labels="{'region': 'infra', 'router': 'true'}"
node02.example.com openshift_ip=192.168.101.103 openshift_host=192.168.101.103 ansible_ssh_private_key_file="/home/vagrant/.ssh/node02.key" openshift_schedulable=true openshift_node_labels="{'region': 'infra', 'router': 'true'}"
